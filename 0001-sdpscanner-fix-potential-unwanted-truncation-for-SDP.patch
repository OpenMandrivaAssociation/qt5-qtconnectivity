From 4cebbab3adefd4fb5472f794c2b64b6b6d37332b Mon Sep 17 00:00:00 2001
From: Ivan Solovev <ivan.solovev@qt.io>
Date: Fri, 17 Feb 2023 17:58:35 +0100
Subject: [PATCH 1/6] sdpscanner: fix potential unwanted truncation for
 SDP_TEXT_STR{8,16,32}

QByteArray::resize() treats all negative parameters as a request for
a zero length. So the code

  text.resize(text.indexOf('\0'));

can completely erase the text if there is no '\0' in it.

Fix it by explicitly checking the return value of QByteArray::indexOf().

Pick-to: 6.5 6.4 6.2 5.15
Change-Id: Idc42bf4b96a9be5b007916263d6cf1e831b96c07
Reviewed-by: Marc Mutz <marc.mutz@qt.io>
(cherry picked from commit 58cb7eeea5c05e42efc806716eb5eb39bd25787b)
---
 src/tools/sdpscanner/main.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/tools/sdpscanner/main.cpp b/src/tools/sdpscanner/main.cpp
index 7e09ca6e..1a292130 100644
--- a/src/tools/sdpscanner/main.cpp
+++ b/src/tools/sdpscanner/main.cpp
@@ -159,7 +159,9 @@ static void parseAttributeValues(sdp_data_t *data, int indentation, QByteArray &
                 break;
             } else if (!isprint(text[i])) {
                 hasNonPrintableChar = true;
-                text.resize(text.indexOf('\0')); // cut trailing content
+                const auto firstNullIdx = text.indexOf('\0');
+                if (firstNullIdx > 0)
+                    text.resize(firstNullIdx); // cut trailing content
                 break;
             }
         }
-- 
2.43.0

